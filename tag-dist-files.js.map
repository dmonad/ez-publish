{"version":3,"file":"tag-dist-files.js","sources":["src/tag-dist-files.js"],"sourcesContent":["import program from 'commander'\nimport packageJson from '../package.json'\nimport { posix as path } from 'path'\nimport fs from 'fs'\nimport loadJsonFile from 'load-json-file'\nimport { exec } from 'child_process'\nimport async from 'ez-async'\n\nprocess.on('uncaughtException', function (err) {\n  console.error('An exception was thrown: ', err)\n})\n\nprogram\n  .version(packageJson.version)\n  .description(packageJson.description)\n\nprogram.on('--help', function () {\n  console.log(`\n  Example:\n\n    $ tag-dist-files\n\n  `)\n})\n\nprogram\n  .arguments('[dir]')\n  .description('Publish the project including distribution files:\\n  Build > version bump > commit > create git tag > publish to npm')\n  .option('-f, --overwrite-existing-tag', 'Overwrite the existing tag')\n  .action(function (dir, command) {\n    // Specify options for calling process\n    var opts = { cwd: dir }\n\n    async(function * (getCallback) {\n      function * exit (err) {\n        console.error(err)\n        console.log('Reverting to master branch')\n        yield exec('git checkout master', opts, getCallback())\n        process.exit(1)\n      }\n\n      var getPackageJson = async(function * (getCallback, dir) {\n        while (true) {\n          var [err] = yield fs.access(dir, fs.F_OK, getCallback())\n          if (!err) {\n            var pDir = path.join(dir, 'package.json')\n            ;[err] = yield fs.access(pDir, fs.F_OK, getCallback())\n            if (!err) {\n              var p\n              ;[err, p] = yield loadJsonFile(pDir)\n              if (err) yield * exit(err)\n              return [dir, p]\n            } else {\n              dir = path.join(dir, '..')\n            }\n          } else yield * exit('You must specify a package.json file!')\n        }\n      })\n\n      var p, err, stdout, stderr\n\n      // check for existing package.json\n      ;[err, [dir, p]] = yield getPackageJson(dir || './')\n      if (err != null) {\n        console.error('package.json does not exist in this directory!')\n        process.exit(1)\n      }\n\n      // Is there a release message?\n      if (!fs.existsSync(path.join(dir, '.releaseMessage'))) {\n        yield exec('echo \"Title\\n\\nDescription\" > .releaseMessage', opts, getCallback())\n      }\n      // open it before publishing?\n      ;[err] = yield exec('xdg-open .releaseMessage', opts, getCallback())\n\n      // read releaseMessage\n      var releaseMessage\n      ;[err, releaseMessage] = yield fs.readFile(path.join(dir, '.releaseMessage'), 'utf8', getCallback())\n      releaseMessage = releaseMessage.split('\\n').filter(line => line[0] !== '#').join('\\n')\n\n      // detach head\n      ;[err, stdout, stderr] = yield exec('git checkout --detach', opts, getCallback())\n      if (err) {\n        yield * exit(`Unable to detach head:\\n\\n${stdout}\\n\\n${stderr}`)\n      } else {\n        console.log('✓ Detach head')\n      }\n      var releasefilesAdded = false\n      var files = p.files || []\n\n      // add dist files\n      for (var i = 0; i < files.length; i++) {\n        ;[err, stdout, stderr] = yield exec(`git add ${files[i]} -f`, opts, getCallback())\n        if (err) {\n          console.warn(`❌ Failed to add ${files[i]} to index`)\n        } else {\n          releasefilesAdded = true\n          console.log(`✓ Add ${files[i]} to index`)\n        }\n      }\n\n      if (releasefilesAdded) {\n        // commit dist files\n        ;[err, stdout, stderr] = yield exec(`git commit -am \"v${p.version} -- distribution files\"`, opts, getCallback())\n        if (err) {\n          yield * exit(`Unable to commit dist files:\\n\\n${stdout}\\n\\n${stderr}`)\n        } else {\n          console.log('✓ Commit dist files')\n        }\n      }\n\n      // remove existing tags (e.g. created by np)\n      if (command.overwriteExistingTag) {\n        yield exec(`git tag -d v${p.version}`, opts, getCallback())\n        yield exec(`git push origin :refs/tags/v${p.version}`, opts, getCallback())\n      }\n\n      // tag releasefiles\n\n      // escape \" characters in releaseMessage\n      releaseMessage = releaseMessage.split('\"').join('\\\\\"')\n      ;[err, stdout, stderr] = yield exec(`git tag v${p.version} -m \"${releaseMessage}\"`, opts, getCallback())\n      if (err) {\n        yield * exit(`Unable to tag commit:\\n\\n${stdout}\\n\\n${stderr}`)\n      } else {\n        console.log('✓ Tag release')\n      }\n\n      // push tag\n      ;[err, stdout, stderr] = yield exec(`git push origin v${p.version}`, opts, getCallback())\n      if (err) {\n        yield * exit(`Unable to tag commit:\\n\\n${stdout}\\n\\n${stderr}`)\n      } else {\n        console.log('✓ Push tag')\n      }\n\n      // check out master\n      ;[err, stdout, stderr] = yield exec('git checkout master', opts, getCallback())\n      if (err) {\n        yield * exit(`Unable to checkout branch 'master':\\n\\n${stdout}\\n\\n${stderr}`)\n      } else {\n        console.log('✓ Checkout master branch')\n        yield exec('rm .releaseMessage', opts, getCallback())\n        process.exit(0)\n      }\n    })()\n  })\n\nvar args = process.argv\nif (args.every((arg, i) => i < 2 || arg[0] === '-')) {\n  args.push('.')\n}\n\nprogram\n  .parse(process.argv)\n\nif (!program.args.length) program.help()\n"],"names":["process","on","err","error","program","version","packageJson","description","log","arguments","option","action","dir","command","opts","cwd","getCallback","exit","exec","getPackageJson","async","fs","access","F_OK","pDir","path","join","p","loadJsonFile","stdout","stderr","existsSync","releaseMessage","readFile","split","filter","line","releasefilesAdded","files","i","length","warn","overwriteExistingTag","args","argv","every","arg","push","parse","help"],"mappings":"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"}